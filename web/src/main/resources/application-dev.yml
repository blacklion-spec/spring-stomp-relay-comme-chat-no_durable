server:
  port: 9000
#  ssl:
#    key-store: classpath:8297403_www.littleass.top.pfx
#    key-store-password: e1XQ1bL9
#    key-store-type: PKCS12

spring:
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    #    分库分表，这里只配置分库规则
    sharding:
#     默认的分库算法
      default-database-strategy:
        inline:
          sharding-column: USER_ID
          algorithm-expression: master$->{user_id % 2}
      #      读写分离
      master-slave-rules:
        ds0:
          master-data-source-name: master0
          slave-data-source-names: master0slave0
        ds1:
          master-data-source-name: master1
          slave-data-source-names: master1slave1
#     配置表的分库分片规则
      tables:
        user:
          key-generator:
            column: USER_ID
            type: SNOWFLAKE
          actual-data-nodes: ds$->{0..1}.user
          database-strategy:
            inline:
              sharding-column: USER_ID
              algorithm-expression: ds$->{USER_ID % 2}

    datasource:
      names: master0,master1,master0slave0,master1slave1
      master0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/custom_chat?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: root
      master0slave0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3307/custom_chat?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: root
      master1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/custom_chat_shard?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: 123456
      master1slave1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3307/custom_chat_shard?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: 123456
    masterslave:
      load-balance-algorithm-type: round_robin
    props:
      # 开启SQL显示，默认false
      sql:
        show: true
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    lettuce: # 这里标明使用lettuce配置
      pool:
        max-active: 8   #连接池最大连接数（使用负值表示没有限制）
        max-wait: 1000  #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 5     #连接池中的最大空闲连接
        min-idle: 0     #连接池中的最小空闲连接
    timeout: 2000    #连接超时时间（毫秒）


  mail:
    host: smtp.163.com
    username: raymawork@163.com
    password: JLQOYJTBKTAVPWJW
    default-encoding: UTF-8
    from: raymawork@163.com
    protocol: smtp
    properties:
      mail:
        smtp:
          ssl:
            enable: true
  datasource:
    #    driver-class-name: com.mysql.cj.jdbc.Driver
    #    type: com.alibaba.druid.pool.DruidDataSource
    #    url: jdbc:mysql://127.0.0.1:3306/custom_chat?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=GMT%2B8
    #    username: root
    #    password: root
    druid:
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall,logback
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置 DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: .js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        url-pattern: /druid/*
        # IP 白名单，没有配置或者为空，则允许所有访问
        allow: 127.0.0.1
        # IP 黑名单，若白名单也存在，则优先使用
        deny: 192.168.31.253
        # 禁用 HTML 中 Reset All 按钮
        reset-enable: false
        # 登录用户名/密码
        login-username: root
        login-password: 123
  mvc:
    view:
      suffix: .html
    static-path-pattern: /**
  resources:
    static-locations: classpath:/templates/,classpath:/static/

mybatis:
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true